// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0
// @generated from file google/api/field_info.proto (package google.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldOptions, proto3 } from "@bufbuild/protobuf";

/**
 * Rich semantic information of an API field beyond basic typing.
 *
 * @generated from message google.api.FieldInfo
 */
export const FieldInfo = /*@__PURE__*/ proto3.makeMessageType(
  "google.api.FieldInfo",
  () => [
    { no: 1, name: "format", kind: "enum", T: proto3.getEnumType(FieldInfo_Format) },
    { no: 2, name: "referenced_types", kind: "message", T: TypeReference, repeated: true },
  ],
);

/**
 * The standard format of a field value. The supported formats are all backed
 * by either an RFC defined by the IETF or a Google-defined AIP.
 *
 * @generated from enum google.api.FieldInfo.Format
 */
export const FieldInfo_Format = /*@__PURE__*/ proto3.makeEnum(
  "google.api.FieldInfo.Format",
  [
    {no: 0, name: "FORMAT_UNSPECIFIED"},
    {no: 1, name: "UUID4"},
    {no: 2, name: "IPV4"},
    {no: 3, name: "IPV6"},
    {no: 4, name: "IPV4_OR_IPV6"},
  ],
);

/**
 * A reference to a message type, for use in [FieldInfo][google.api.FieldInfo].
 *
 * @generated from message google.api.TypeReference
 */
export const TypeReference = /*@__PURE__*/ proto3.makeMessageType(
  "google.api.TypeReference",
  () => [
    { no: 1, name: "type_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Rich semantic descriptor of an API field beyond the basic typing.
 *
 * Examples:
 *
 *     string request_id = 1 [(google.api.field_info).format = UUID4];
 *     string old_ip_address = 2 [(google.api.field_info).format = IPV4];
 *     string new_ip_address = 3 [(google.api.field_info).format = IPV6];
 *     string actual_ip_address = 4 [
 *       (google.api.field_info).format = IPV4_OR_IPV6
 *     ];
 *     google.protobuf.Any generic_field = 5 [
 *       (google.api.field_info).referenced_types = {type_name: "ActualType"},
 *       (google.api.field_info).referenced_types = {type_name: "OtherType"},
 *     ];
 *     google.protobuf.Any generic_user_input = 5 [
 *       (google.api.field_info).referenced_types = {type_name: "*"},
 *     ];
 *
 * @generated from extension: google.api.FieldInfo field_info = 291403980;
 */
export const field_info = proto3.makeExtension(
  "google.api.field_info", 
  FieldOptions, 
  () => ({ no: 291403980, kind: "message", T: FieldInfo }),
);

