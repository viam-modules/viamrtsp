// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: google/geo/type/viewport.proto

package viewport

import (
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A latitude-longitude viewport, represented as two diagonally opposite `low`
// and `high` points. A viewport is considered a closed region, i.e. it includes
// its boundary. The latitude bounds must range between -90 to 90 degrees
// inclusive, and the longitude bounds must range between -180 to 180 degrees
// inclusive. Various cases include:
//
//   - If `low` = `high`, the viewport consists of that single point.
//
//   - If `low.longitude` > `high.longitude`, the longitude range is inverted
//     (the viewport crosses the 180 degree longitude line).
//
//   - If `low.longitude` = -180 degrees and `high.longitude` = 180 degrees,
//     the viewport includes all longitudes.
//
//   - If `low.longitude` = 180 degrees and `high.longitude` = -180 degrees,
//     the longitude range is empty.
//
//   - If `low.latitude` > `high.latitude`, the latitude range is empty.
//
// Both `low` and `high` must be populated, and the represented box cannot be
// empty (as specified by the definitions above). An empty viewport will result
// in an error.
//
// For example, this viewport fully encloses New York City:
//
//	{
//	    "low": {
//	        "latitude": 40.477398,
//	        "longitude": -74.259087
//	    },
//	    "high": {
//	        "latitude": 40.91618,
//	        "longitude": -73.70018
//	    }
//	}
type Viewport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The low point of the viewport.
	Low *latlng.LatLng `protobuf:"bytes,1,opt,name=low,proto3" json:"low,omitempty"`
	// Required. The high point of the viewport.
	High          *latlng.LatLng `protobuf:"bytes,2,opt,name=high,proto3" json:"high,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Viewport) Reset() {
	*x = Viewport{}
	mi := &file_google_geo_type_viewport_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Viewport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viewport) ProtoMessage() {}

func (x *Viewport) ProtoReflect() protoreflect.Message {
	mi := &file_google_geo_type_viewport_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viewport.ProtoReflect.Descriptor instead.
func (*Viewport) Descriptor() ([]byte, []int) {
	return file_google_geo_type_viewport_proto_rawDescGZIP(), []int{0}
}

func (x *Viewport) GetLow() *latlng.LatLng {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *Viewport) GetHigh() *latlng.LatLng {
	if x != nil {
		return x.High
	}
	return nil
}

var File_google_geo_type_viewport_proto protoreflect.FileDescriptor

const file_google_geo_type_viewport_proto_rawDesc = "" +
	"\n" +
	"\x1egoogle/geo/type/viewport.proto\x12\x0fgoogle.geo.type\x1a\x18google/type/latlng.proto\"Z\n" +
	"\bViewport\x12%\n" +
	"\x03low\x18\x01 \x01(\v2\x13.google.type.LatLngR\x03low\x12'\n" +
	"\x04high\x18\x02 \x01(\v2\x13.google.type.LatLngR\x04highBo\n" +
	"\x13com.google.geo.typeB\rViewportProtoP\x01Z@google.golang.org/genproto/googleapis/geo/type/viewport;viewport\xa2\x02\x04GGTPb\x06proto3"

var (
	file_google_geo_type_viewport_proto_rawDescOnce sync.Once
	file_google_geo_type_viewport_proto_rawDescData []byte
)

func file_google_geo_type_viewport_proto_rawDescGZIP() []byte {
	file_google_geo_type_viewport_proto_rawDescOnce.Do(func() {
		file_google_geo_type_viewport_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_geo_type_viewport_proto_rawDesc), len(file_google_geo_type_viewport_proto_rawDesc)))
	})
	return file_google_geo_type_viewport_proto_rawDescData
}

var file_google_geo_type_viewport_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_geo_type_viewport_proto_goTypes = []any{
	(*Viewport)(nil),      // 0: google.geo.type.Viewport
	(*latlng.LatLng)(nil), // 1: google.type.LatLng
}
var file_google_geo_type_viewport_proto_depIdxs = []int32{
	1, // 0: google.geo.type.Viewport.low:type_name -> google.type.LatLng
	1, // 1: google.geo.type.Viewport.high:type_name -> google.type.LatLng
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_geo_type_viewport_proto_init() }
func file_google_geo_type_viewport_proto_init() {
	if File_google_geo_type_viewport_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_geo_type_viewport_proto_rawDesc), len(file_google_geo_type_viewport_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_geo_type_viewport_proto_goTypes,
		DependencyIndexes: file_google_geo_type_viewport_proto_depIdxs,
		MessageInfos:      file_google_geo_type_viewport_proto_msgTypes,
	}.Build()
	File_google_geo_type_viewport_proto = out.File
	file_google_geo_type_viewport_proto_goTypes = nil
	file_google_geo_type_viewport_proto_depIdxs = nil
}
