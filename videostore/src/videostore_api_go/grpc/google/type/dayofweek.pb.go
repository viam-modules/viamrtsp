// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: google/type/dayofweek.proto

package dayofweek

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a day of the week.
type DayOfWeek int32

const (
	// The day of the week is unspecified.
	DayOfWeek_DAY_OF_WEEK_UNSPECIFIED DayOfWeek = 0
	// Monday
	DayOfWeek_MONDAY DayOfWeek = 1
	// Tuesday
	DayOfWeek_TUESDAY DayOfWeek = 2
	// Wednesday
	DayOfWeek_WEDNESDAY DayOfWeek = 3
	// Thursday
	DayOfWeek_THURSDAY DayOfWeek = 4
	// Friday
	DayOfWeek_FRIDAY DayOfWeek = 5
	// Saturday
	DayOfWeek_SATURDAY DayOfWeek = 6
	// Sunday
	DayOfWeek_SUNDAY DayOfWeek = 7
)

// Enum value maps for DayOfWeek.
var (
	DayOfWeek_name = map[int32]string{
		0: "DAY_OF_WEEK_UNSPECIFIED",
		1: "MONDAY",
		2: "TUESDAY",
		3: "WEDNESDAY",
		4: "THURSDAY",
		5: "FRIDAY",
		6: "SATURDAY",
		7: "SUNDAY",
	}
	DayOfWeek_value = map[string]int32{
		"DAY_OF_WEEK_UNSPECIFIED": 0,
		"MONDAY":                  1,
		"TUESDAY":                 2,
		"WEDNESDAY":               3,
		"THURSDAY":                4,
		"FRIDAY":                  5,
		"SATURDAY":                6,
		"SUNDAY":                  7,
	}
)

func (x DayOfWeek) Enum() *DayOfWeek {
	p := new(DayOfWeek)
	*p = x
	return p
}

func (x DayOfWeek) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DayOfWeek) Descriptor() protoreflect.EnumDescriptor {
	return file_google_type_dayofweek_proto_enumTypes[0].Descriptor()
}

func (DayOfWeek) Type() protoreflect.EnumType {
	return &file_google_type_dayofweek_proto_enumTypes[0]
}

func (x DayOfWeek) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DayOfWeek.Descriptor instead.
func (DayOfWeek) EnumDescriptor() ([]byte, []int) {
	return file_google_type_dayofweek_proto_rawDescGZIP(), []int{0}
}

var File_google_type_dayofweek_proto protoreflect.FileDescriptor

const file_google_type_dayofweek_proto_rawDesc = "" +
	"\n" +
	"\x1bgoogle/type/dayofweek.proto\x12\vgoogle.type*\x84\x01\n" +
	"\tDayOfWeek\x12\x1b\n" +
	"\x17DAY_OF_WEEK_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06MONDAY\x10\x01\x12\v\n" +
	"\aTUESDAY\x10\x02\x12\r\n" +
	"\tWEDNESDAY\x10\x03\x12\f\n" +
	"\bTHURSDAY\x10\x04\x12\n" +
	"\n" +
	"\x06FRIDAY\x10\x05\x12\f\n" +
	"\bSATURDAY\x10\x06\x12\n" +
	"\n" +
	"\x06SUNDAY\x10\aBi\n" +
	"\x0fcom.google.typeB\x0eDayOfWeekProtoP\x01Z>google.golang.org/genproto/googleapis/type/dayofweek;dayofweek\xa2\x02\x03GTPb\x06proto3"

var (
	file_google_type_dayofweek_proto_rawDescOnce sync.Once
	file_google_type_dayofweek_proto_rawDescData []byte
)

func file_google_type_dayofweek_proto_rawDescGZIP() []byte {
	file_google_type_dayofweek_proto_rawDescOnce.Do(func() {
		file_google_type_dayofweek_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_type_dayofweek_proto_rawDesc), len(file_google_type_dayofweek_proto_rawDesc)))
	})
	return file_google_type_dayofweek_proto_rawDescData
}

var file_google_type_dayofweek_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_type_dayofweek_proto_goTypes = []any{
	(DayOfWeek)(0), // 0: google.type.DayOfWeek
}
var file_google_type_dayofweek_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_type_dayofweek_proto_init() }
func file_google_type_dayofweek_proto_init() {
	if File_google_type_dayofweek_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_type_dayofweek_proto_rawDesc), len(file_google_type_dayofweek_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_type_dayofweek_proto_goTypes,
		DependencyIndexes: file_google_type_dayofweek_proto_depIdxs,
		EnumInfos:         file_google_type_dayofweek_proto_enumTypes,
	}.Build()
	File_google_type_dayofweek_proto = out.File
	file_google_type_dayofweek_proto_goTypes = nil
	file_google_type_dayofweek_proto_depIdxs = nil
}
