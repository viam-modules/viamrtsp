// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: google/type/interval.proto

package interval

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a time interval, encoded as a Timestamp start (inclusive) and a
// Timestamp end (exclusive).
//
// The start must be less than or equal to the end.
// When the start equals the end, the interval is empty (matches no time).
// When both start and end are unspecified, the interval matches any time.
type Interval struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Inclusive start of the interval.
	//
	// If specified, a Timestamp matching this interval will have to be the same
	// or after the start.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Optional. Exclusive end of the interval.
	//
	// If specified, a Timestamp matching this interval will have to be before the
	// end.
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interval) Reset() {
	*x = Interval{}
	mi := &file_google_type_interval_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_google_type_interval_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_google_type_interval_proto_rawDescGZIP(), []int{0}
}

func (x *Interval) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Interval) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

var File_google_type_interval_proto protoreflect.FileDescriptor

const file_google_type_interval_proto_rawDesc = "" +
	"\n" +
	"\x1agoogle/type/interval.proto\x12\vgoogle.type\x1a\x1fgoogle/protobuf/timestamp.proto\"|\n" +
	"\bInterval\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTimeBi\n" +
	"\x0fcom.google.typeB\rIntervalProtoP\x01Z<google.golang.org/genproto/googleapis/type/interval;interval\xf8\x01\x01\xa2\x02\x03GTPb\x06proto3"

var (
	file_google_type_interval_proto_rawDescOnce sync.Once
	file_google_type_interval_proto_rawDescData []byte
)

func file_google_type_interval_proto_rawDescGZIP() []byte {
	file_google_type_interval_proto_rawDescOnce.Do(func() {
		file_google_type_interval_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_type_interval_proto_rawDesc), len(file_google_type_interval_proto_rawDesc)))
	})
	return file_google_type_interval_proto_rawDescData
}

var file_google_type_interval_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_google_type_interval_proto_goTypes = []any{
	(*Interval)(nil),              // 0: google.type.Interval
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_google_type_interval_proto_depIdxs = []int32{
	1, // 0: google.type.Interval.start_time:type_name -> google.protobuf.Timestamp
	1, // 1: google.type.Interval.end_time:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_google_type_interval_proto_init() }
func file_google_type_interval_proto_init() {
	if File_google_type_interval_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_type_interval_proto_rawDesc), len(file_google_type_interval_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_type_interval_proto_goTypes,
		DependencyIndexes: file_google_type_interval_proto_depIdxs,
		MessageInfos:      file_google_type_interval_proto_msgTypes,
	}.Build()
	File_google_type_interval_proto = out.File
	file_google_type_interval_proto_goTypes = nil
	file_google_type_interval_proto_depIdxs = nil
}
