// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: google/type/month.proto

package month

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a month in the Gregorian calendar.
type Month int32

const (
	// The unspecified month.
	Month_MONTH_UNSPECIFIED Month = 0
	// The month of January.
	Month_JANUARY Month = 1
	// The month of February.
	Month_FEBRUARY Month = 2
	// The month of March.
	Month_MARCH Month = 3
	// The month of April.
	Month_APRIL Month = 4
	// The month of May.
	Month_MAY Month = 5
	// The month of June.
	Month_JUNE Month = 6
	// The month of July.
	Month_JULY Month = 7
	// The month of August.
	Month_AUGUST Month = 8
	// The month of September.
	Month_SEPTEMBER Month = 9
	// The month of October.
	Month_OCTOBER Month = 10
	// The month of November.
	Month_NOVEMBER Month = 11
	// The month of December.
	Month_DECEMBER Month = 12
)

// Enum value maps for Month.
var (
	Month_name = map[int32]string{
		0:  "MONTH_UNSPECIFIED",
		1:  "JANUARY",
		2:  "FEBRUARY",
		3:  "MARCH",
		4:  "APRIL",
		5:  "MAY",
		6:  "JUNE",
		7:  "JULY",
		8:  "AUGUST",
		9:  "SEPTEMBER",
		10: "OCTOBER",
		11: "NOVEMBER",
		12: "DECEMBER",
	}
	Month_value = map[string]int32{
		"MONTH_UNSPECIFIED": 0,
		"JANUARY":           1,
		"FEBRUARY":          2,
		"MARCH":             3,
		"APRIL":             4,
		"MAY":               5,
		"JUNE":              6,
		"JULY":              7,
		"AUGUST":            8,
		"SEPTEMBER":         9,
		"OCTOBER":           10,
		"NOVEMBER":          11,
		"DECEMBER":          12,
	}
)

func (x Month) Enum() *Month {
	p := new(Month)
	*p = x
	return p
}

func (x Month) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Month) Descriptor() protoreflect.EnumDescriptor {
	return file_google_type_month_proto_enumTypes[0].Descriptor()
}

func (Month) Type() protoreflect.EnumType {
	return &file_google_type_month_proto_enumTypes[0]
}

func (x Month) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Month.Descriptor instead.
func (Month) EnumDescriptor() ([]byte, []int) {
	return file_google_type_month_proto_rawDescGZIP(), []int{0}
}

var File_google_type_month_proto protoreflect.FileDescriptor

const file_google_type_month_proto_rawDesc = "" +
	"\n" +
	"\x17google/type/month.proto\x12\vgoogle.type*\xb0\x01\n" +
	"\x05Month\x12\x15\n" +
	"\x11MONTH_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aJANUARY\x10\x01\x12\f\n" +
	"\bFEBRUARY\x10\x02\x12\t\n" +
	"\x05MARCH\x10\x03\x12\t\n" +
	"\x05APRIL\x10\x04\x12\a\n" +
	"\x03MAY\x10\x05\x12\b\n" +
	"\x04JUNE\x10\x06\x12\b\n" +
	"\x04JULY\x10\a\x12\n" +
	"\n" +
	"\x06AUGUST\x10\b\x12\r\n" +
	"\tSEPTEMBER\x10\t\x12\v\n" +
	"\aOCTOBER\x10\n" +
	"\x12\f\n" +
	"\bNOVEMBER\x10\v\x12\f\n" +
	"\bDECEMBER\x10\fB]\n" +
	"\x0fcom.google.typeB\n" +
	"MonthProtoP\x01Z6google.golang.org/genproto/googleapis/type/month;month\xa2\x02\x03GTPb\x06proto3"

var (
	file_google_type_month_proto_rawDescOnce sync.Once
	file_google_type_month_proto_rawDescData []byte
)

func file_google_type_month_proto_rawDescGZIP() []byte {
	file_google_type_month_proto_rawDescOnce.Do(func() {
		file_google_type_month_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_type_month_proto_rawDesc), len(file_google_type_month_proto_rawDesc)))
	})
	return file_google_type_month_proto_rawDescData
}

var file_google_type_month_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_google_type_month_proto_goTypes = []any{
	(Month)(0), // 0: google.type.Month
}
var file_google_type_month_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_google_type_month_proto_init() }
func file_google_type_month_proto_init() {
	if File_google_type_month_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_type_month_proto_rawDesc), len(file_google_type_month_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_type_month_proto_goTypes,
		DependencyIndexes: file_google_type_month_proto_depIdxs,
		EnumInfos:         file_google_type_month_proto_enumTypes,
	}.Build()
	File_google_type_month_proto = out.File
	file_google_type_month_proto_goTypes = nil
	file_google_type_month_proto_depIdxs = nil
}
